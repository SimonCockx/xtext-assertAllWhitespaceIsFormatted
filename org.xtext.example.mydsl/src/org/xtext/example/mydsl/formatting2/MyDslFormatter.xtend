/*
 * generated by Xtext 2.27.0
 */
package org.xtext.example.mydsl.formatting2

import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.xtext.example.mydsl.myDsl.ExistsOperation
import org.xtext.example.mydsl.myDsl.Model
import org.xtext.example.mydsl.myDsl.ConditionalExpression

class MyDslFormatter extends AbstractFormatter2 {
	def dispatch void format(Model model, extension IFormattableDocument document) {
		model.surround[indent]
		model.regionFor.keywords('Expression').forEach[
			prepend[newLine]
			append[noSpace]
		]
		model.regionFor.keywords(':').forEach[
			append[newLine]
		]
		model.exprs.forEach[
			surround[indent]
			format
		]
	}
	
	def dispatch void format(ExistsOperation existsOperation, extension IFormattableDocument document) {
		val existsRegion = existsOperation.regionForEObject
		val existsRegionAndNext = existsRegion.merge(existsRegion.nextHiddenRegion)
		formatConditionally(existsRegionAndNext.offset, existsRegionAndNext.length,
			[doc | // case: long expression
				val extension singleLineDoc = doc.requireFitsInLine
				existsOperation.regionFor.keyword('exists')
					.prepend[oneSpace]
				existsOperation.argument
					.format
			],
			[extension doc | // case: short expression
				existsOperation.regionFor.keyword('exists')
					.prepend[newLine]
				set(
					existsOperation.argument.nextHiddenRegion,
					existsOperation.nextHiddenRegion,
					[indent]
				)
				existsOperation.argument
					.format
			]
		)
	}

	def dispatch void format(ConditionalExpression conditional, extension IFormattableDocument document) {		
		conditional.regionFor.keywords('if', 'then').forEach[
			append[oneSpace]
		]
		
		val conditionalRegion = conditional.regionForEObject
		val conditionalRegionAndNext = conditionalRegion.merge(conditionalRegion.nextHiddenRegion)
		formatConditionally(conditionalRegionAndNext.offset, conditionalRegionAndNext.length,
			[doc | // case: short conditional
				val extension singleLineDoc = doc.requireFitsInLine
				conditional.regionFor.keyword('then')
					.prepend[oneSpace]
				conditional.condition.format
				conditional.then.format
			],
			[extension doc | // case: long conditional
				conditional.regionFor.keyword('then')
					.prepend[newLine]
				conditional.condition.format
				conditional.then.format
			]
		)
	}
	
}
